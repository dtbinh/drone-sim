package improbable.drone;

import "improbable/vector3.schema";

enum TargetPending {
	REQUEST = 1;
	WAITING = 2;
	RECEIVED = 3;
}

enum DroneStatus {
	HOVER = 0;
	MOVE = 1;
	LAND = 2;
	LOST = 3;
	DEAD = 4;
}

type NewTargetRequest {
	improbable.Vector3f target = 1;
}

type NewTargetResponse {}

component DroneData {
  id = 1100;

  improbable.Vector3f target = 1; // next target
  float speed = 2; // speed of the drone
  improbable.Vector3f direction = 3; // last set direction of the drone
  TargetPending target_pending = 4; //to indicate what stage of target fetching we are in

  // drone's last target, used to push self away from previous checkpoint
  improbable.Vector3f previous_target = 6; 

  float starting_delay = 7; //time to pause upon creation before starting

  bool snapshot = 5; //true if created from a snapshot

  EntityId designated_controller = 8;

  command NewTargetResponse receive_new_target(NewTargetRequest);
}