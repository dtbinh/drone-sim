package improbable.controller;

import "improbable/vector3.schema";

enum PackageType {
	LETTER_SMALL = 0;
	LETTER_LARGE = 1;
	ENVELOPE_SMALL = 2;
	ENVELOPE_STANDARD = 3;
	ENVELOPE_LARGE = 4;
	PARCEL = 5;
}

enum DeliveryType {
	STANDARD = 0;
	PRIORITY = 1;
	URGENT = 2;
	SUPER_PRIORITY = 3;
}

type PackageInfo {
	PackageType type = 1;
	float weight = 2;
}

type TimeValueFunction {
	list<bool> steps = 1;
	int32 num_steps = 2;
	DeliveryType tier = 3;
}

type DeliveryRequest {
	int64 id = 4;
	improbable.Vector3f destination = 1;
	PackageInfo package_info = 2;
	TimeValueFunction time_value_function = 3;
}

type QueueEntry {
	float timestamp = 1;
	DeliveryRequest request = 2;
	float priority = 3;
	float expected_duration = 4;
}

type DeliveryResponse {
	bool success = 1;
}

component DeliveryHandler {
	id = 1201;

	list<QueueEntry> request_queue = 1;

	float potential = 2;
	float rejected_value = 4;
	int32 rejections = 3;

	command DeliveryResponse request_delivery(DeliveryRequest);
}