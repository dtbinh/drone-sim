package improbable.controller;

import "improbable/vector3.schema";

type TargetRequest {
	EntityId drone_id = 1;
	option<improbable.Vector3f> destination = 2;
}

type TargetResponse {}

type DroneInfo {
	int32 next_waypoint = 1;
	list<improbable.Vector3f> waypoints = 2;
  bool returning = 3;
}

type CollisionRequest {
  EntityId drone_id = 1;
  EntityId collider_id = 2;
}

type CollisionResponse {}

component Controller {
  id = 1200;

  uint32 drone_count = 1;
  uint32 max_drone_count = 2;

  map<EntityId, DroneInfo> drone_map = 3;

  bool initialised = 4;
  Vector3f top_left = 5;
  Vector3f bottom_right = 6;

  list<TargetRequest> request_queue = 7;

  command TargetResponse request_new_target(TargetRequest);
  command CollisionResponse collision(CollisionRequest);
}